# syntax=docker.io/docker/dockerfile:1

FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm first
RUN corepack enable && corepack prepare pnpm@latest --activate

# Copy package files
COPY package.json pnpm-lock.yaml* .npmrc* ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Development image
FROM base AS dev
WORKDIR /app

# Enable corepack and pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Copy package files and node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /usr/local/bin/pnpm /usr/local/bin/pnpm
COPY . .

# Expose port
EXPOSE 3000

# Disable telemetry
ENV NEXT_TELEMETRY_DISABLED=1

# Environment variables
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start dev server
CMD ["pnpm", "dev"]
