services:
  backend:
    container_name: template-backend
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.prod
    env_file: .env
    environment:
      - BACKEND_APP_DEBUG=false
    networks:
      - template-network
    profiles:
      - prod

  backend-dev:
    container_name: template-backend-dev
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    env_file: .env
    environment:
      - BACKEND_APP_DEBUG=true
    volumes:
      - ./apps/backend/src:/backend/src
    networks:
      - template-network
    profiles:
      - dev

  backend-test-e2e:
    container_name: template-backend-test-e2e
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.test.e2e
    env_file: .env
    environment:
      - BACKEND_APP_DEBUG=true
    networks:
      - template-network
    profiles:
      - test
      - test-e2e

  backend-test-unit:
    container_name: template-backend-test-unit
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.test.unit
    env_file: .env
    environment:
      - BACKEND_APP_DEBUG=true
    networks:
      - template-network
    profiles:
      - test
      - test-unit

  node-exporter:
    container_name: template-node-exporter
    image: quay.io/prometheus/node-exporter:v1.9.1
    env_file: .env
    volumes:
      - template-node-exporter-data:/host:ro,rslave
    networks:
      - template-network
    command:
      - --path.rootfs=/host
    profiles:
      - prod

  prometheus:
    container_name: template-prometheus
    image: prom/prometheus:v3.3.0
    env_file: .env
    volumes:
      - ./etc/prometheus:/etc/prometheus
    networks:
      - template-network
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    profiles:
      - prod

  alertmanager:
    container_name: template-alertmanager
    build:
      context: ./etc/alertmanager
      dockerfile: Dockerfile
    env_file: .env
    networks:
      - template-network
    depends_on:
      backend:
        condition: service_started
      prometheus:
        condition: service_started
    profiles:
      - prod

  grafana:
    container_name: template-grafana
    image: grafana/grafana:11.6.1
    env_file: .env
    volumes:
      - template-grafana-data:/var/lib/grafana
      - ./etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./etc/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./etc/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - template-network
    depends_on:
      prometheus:
        condition: service_started
    profiles:
      - prod

  nginx:
    container_name: template-nginx
    image: nginx:1.28.0
    depends_on:
      backend:
        condition: service_started
      grafana:
        condition: service_started
    volumes:
      - ./etc/nginx/conf.d/default.prod.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 443:443
      - 80:80
    networks:
      - template-network
    profiles:
      - prod

  nginx-dev:
    container_name: template-nginx-dev
    image: nginx:1.28.0
    depends_on:
      backend-dev:
        condition: service_started
    volumes:
      - ./etc/nginx/conf.d/default.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 443:443
      - 80:80
    networks:
      - template-network
    profiles:
      - dev

volumes:
  template-node-exporter-data:
    name: template-node-exporter-data
  template-grafana-data:
    name: template-grafana-data

networks:
  template-network:
    name: template-network
    driver: bridge
